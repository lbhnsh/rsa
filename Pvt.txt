import java.io.*;
import java.nio.file.*;
import java.security.*;
import java.security.cert.Certificate;
import java.util.Base64;

public class SignWithPrivateKey {
    public static void main(String[] args) throws Exception {
        String keystorePath = "your_keystore.p12";
        String keystorePassword = "password";
        String alias = "your_alias";
        String xmlFile = "pacs008.xml";
        String outputFile = "private_signature.txt";

        // Load KeyStore
        KeyStore keystore = KeyStore.getInstance("PKCS12");
        try (FileInputStream fis = new FileInputStream(keystorePath)) {
            keystore.load(fis, keystorePassword.toCharArray());
        }

        PrivateKey privateKey = (PrivateKey) keystore.getKey(alias, keystorePassword.toCharArray());

        // Read the XML file
        byte[] message = Files.readAllBytes(Paths.get(xmlFile));

        // Sign using MD5withRSA
        Signature signature = Signature.getInstance("MD5withRSA");
        signature.initSign(privateKey);
        signature.update(message);
        byte[] signedBytes = signature.sign();

        // Store Base64 signature
        String base64Signature = Base64.getEncoder().encodeToString(signedBytes);
        Files.write(Paths.get(outputFile), base64Signature.getBytes());

        System.out.println("Signature created and stored to " + outputFile);
    }
}
