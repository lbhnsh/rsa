import sun.security.pkcs.PKCS7;
import sun.security.pkcs.SignerInfo;
import sun.security.util.DerInputStream;

import java.io.File;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.security.KeyStore;
import java.security.PublicKey;
import java.security.Signature;
import java.security.cert.X509Certificate;
import java.util.Base64;

public class Pkcs7DetachedVerifier {

    public static void main(String[] args) throws Exception {
        // Load original message (after </AppHdr>)
        String xml = new String(Files.readAllBytes(new File("sample_pacs008.xml").toPath()), StandardCharsets.UTF_8);
        String payload = xml.replaceAll("(?s).*?</AppHdr>", "").trim();
        byte[] payloadBytes = payload.getBytes(StandardCharsets.UTF_8);

        // Load Base64 PKCS7 signature and decode
        String base64Sig = new String(Files.readAllBytes(new File("signature.txt").toPath()), StandardCharsets.UTF_8);
        base64Sig = base64Sig.replaceAll("\\s+", "");
        byte[] pkcs7Bytes = Base64.getDecoder().decode(base64Sig);

        // Parse PKCS7
        DerInputStream derIn = new DerInputStream(pkcs7Bytes);
        PKCS7 pkcs7 = new PKCS7(derIn);
        SignerInfo[] signers = pkcs7.getSignerInfos();
        X509Certificate[] certs = pkcs7.getCertificates();

        boolean verifiedAny = false;
        for (SignerInfo si : signers) {
            for (X509Certificate cert : certs) {
                if (cert.getSerialNumber().equals(si.getCertificate(pkcs7).getSerialNumber())) {
                    PublicKey pubKey = cert.getPublicKey();

                    // Manually verify
                    Signature sig = Signature.getInstance("SHA256withRSA");
                    sig.initVerify(pubKey);
                    sig.update(payloadBytes);
                    boolean verified = sig.verify(si.getEncryptedDigest());

                    System.out.println("Certificate CN: " + cert.getSubjectX500Principal());
                    System.out.println("Signature Valid: " + (verified ? "YES" : "NO"));
                    verifiedAny |= verified;
                }
            }
        }

        System.out.println("Overall Verification: " + (verifiedAny ? "SUCCESS" : "FAILED"));
    }
}
